name: chocolatine

on:
  push:
  pull_request:
    paths-ignore:
    - "ga-ignore-**"
env:
  MIRROR_URL: git@github.com:EpitechPromo2026/B-DOP-200-NCE-2-1-chocolatine-noah.cherel.git
  EXECUTABLES: binary1, binary2
jobs:
  check_repository_cleanliness:
    name: check_repository_cleanliness
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: check cleanliness
      run: |
          FILE=$(find . -type f -name "#*#" -o -name "*-" -o -iname "*pain_au_chocolat*" -o -name "*.o" -o -name "*.a" -o -name "*.so" -o -name "*.gcno" -o -name "*.gcda" -o -name "*.gcov -o -path "*/tmp/*"")
          if test $(find . -type f -name "#*#" -o -name "*-" -o -iname "*pain_au_chocolat*" -o -name "*.o" -o -name "*.a" -o -name "*.so" -o -name "*.gcno" -o -name "*.gcda" -o -name "*.gcov" -o -path "*/tmp/*" | wc -c) -eq 0
          then
          echo "has no error"
          else
          echo "::error file=${FILE},title=Unwanted file detected:::${FILE}"
          exit 1
          fi

  check_program_compilation:
    name: check_program_compilation
    runs-on: ubuntu-latest
    needs: [check_repository_cleanliness]
    container:
      image: epitechcontent/epitest-docker
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Compile the program
        run: |
          timeout 2m make
      - name: make clean
        run: |
          make clean

  run_tests:
    name: run_tests
    runs-on: ubuntu-latest
    needs: [check_repository_cleanliness, check_program_compilation]
    container:
      image: epitechcontent/epitest-docker
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Run tests
        run: |
          timeout 2m make test_run

  push_to_mirror:
    name: push_to_mirror
    runs-on: ubuntu-latest
    needs: [check_repository_cleanliness, check_program_compilation, run_tests]
    container:
      image: epitechcontent/epitest-docker
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Push to mirror
        run: |
          timeout 2m make push_to_mirror